@use "sass:color";
@use "sass:math";
@use "@econ/frontend-framework/dist/main" with ($notification-position: 7rem 0 auto 0,
    $font-path: "../node_modules/@econ/frontend-framework/dist/font",
    $header-height: 124px,
    $header-height-mobile: 96px,
);
@use "@econ/frontend-framework/dist/sass/colors" as c;
@use "@econ/frontend-framework/dist/sass/variables" as vars;
@use "@econ/frontend-framework/dist/sass/breakpoints";

@use "./admin/calendar";

$orange: rgb(226, 117, 0) !default;

.color-orange,
[class*="orange-on-"] {
    color: $orange;
}

// Typography
h1,
.heading-1 {
    word-wrap: break-word;
}

// Experimental
.btn {
    white-space: nowrap
}

@include breakpoints.econ-mobile {

    *+h1,
    h1+*,
    *+h2,
    *+.heading-1,
    .heading-1+*,
    *+.heading-2 {
        margin-top: vars.$space-md;
    }
}

@include breakpoints.econ-mobile {
    .sm-inset-lg {
        padding: vars.$space-lg;
    }
}

form[class*="stack"] input[type="hidden"]+* {
    margin-top: 0;
}

.form-group.horizontal.wrap.flex-gap {
    row-gap: 0;
}

.form-group .help {
    @extend .flexcolumn;
}

.datepicker-msg:empty {
    display: none;
}

.grouped-input {
    border-radius: vars.$border-radius;
    border: 1px solid c.$grey-light;
    overflow: hidden;

    select,
    input {
        border: none;
        border-radius: 0;
    }

    &>* {
        width: auto;
    }

    &>.select select {
        padding-right: vars.$space-base * 2;
        width: auto;
        min-width: 7.5rem;
        background-color: c.$grey-lighter;
        border-left: 1px solid c.$grey-lighter;
    }
}

input[readonly],
select[readonly] {
    background-color: c.$grey-light;
    color: c.$grey-dark;
    cursor: not-allowed;

    &:hover {
        background-color: c.$grey-light;
    }
}

// Index page
.index-page>*:nth-child(2) {
    flex-basis: 25%;
    flex-shrink: 0;
}

@include breakpoints.econ-mobile {
    .index-page {
        flex-direction: column;
    }
}

// Mailings toggle
.toggled {
    display: flex;
}

// Filter
.switcher-sm>* {
    flex-basis: calc((24rem - 100%)*999);
}

#filter-form {

    label,
    input,
    select {
        font-size: vars.$font-size-sm;
    }

    .key-select {
        flex-basis: calc(calc(100% - (2 * vars.$space-base)) / 3);
    }

    .border {
        border-color: #d7d7d7;
    }

    .predicate {
        background-color: rgba(0, 0, 0, 0.02);
        position: relative;

        &[data-predicate="and"],
        &[data-predicate="or"] {
            &>.predicate-inner>.predicate-wrapper {
                padding-left: vars.$space-sm;
                border-left: 2px solid c.$grey-border;
            }
        }
    }

    [data-delete-predicate] {
        color: c.$red;
        cursor: pointer;
    }
}

.filter-bar-reset {
    grid-column: 4;

    @include breakpoints.econ-until(breakpoints.$desktop-breakpoint) {
        grid-column: 2;
    }

    @include breakpoints.econ-until(breakpoints.$tablet-breakpoint) {
        grid-column: 1;
    }
}

@include breakpoints.econ-until(breakpoints.$tablet-breakpoint) {
    [class*="grid-"] .search-bar {
        grid-column: span 1;
    }
}

#filter-form,
#role-search-form {
    [data-query="input"] {
        [data-id] {
            cursor: pointer;
        }
    }

    .data-list>[data-selection-item] {
        @extend .has-icon;
        padding: vars.$space-sm;

        &:hover {
            background-color: c.$grey-light;
        }

        .toggle-item {
            display: none;
        }
    }

    input[disabled] {
        cursor: not-allowed;
    }
}

[data-search-selection] {
    row-gap: vars.$space-xs;
    column-gap: vars.$space-sm;
}

// Flex
.flexcolumn-reversed-tablet {
    &>* {
        flex-basis: 50%;
    }

    @include breakpoints.econ-until(breakpoints.$tablet-breakpoint) {
        flex-direction: column-reverse;
    }
}

abbr[title] {
    text-decoration: none;
}

// CK Editor
.form-group:not(.horizontal)>*~.ck {
    margin-top: vars.$space-xs;
}

.ck-content {
    @extend textarea;
}

.table tr.highlighted {
    position: relative;

    &:after {
        content: '';
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        background-color: c.$black;
        opacity: 0.05;
    }

    a,
    form {
        z-index: 5;
    }
}

.legend-item {
    width: vars.$space-base;
    display: flex;
}

.legend-color {
    @extend .border
}

button.as-link {
    padding: 0;
    border: none;
    color: c.$color-primary;
    background-color: transparent;

    &:hover {
        color: c.$color-primary;
        background-color: transparent;
    }
}

// Tags
.tag button {
    color: inherit;
    background-color: transparent;
    border: none;
    border-radius: 0;
    padding: 0;
    display: flex;

    &:hover {
        background-color: transparent;
    }
}

// Table
table.fixed {
    table-layout: fixed;
}

table.width-auto {
    width: auto;
}

@include breakpoints.econ-mobile {
    .table.break-mobile th {
        width: 100%;
    }
}

// Copy to clipboard
[data-clipboard] {
    cursor: copy;
}

// Flex grid
.flex-basis-100 {
    flex-basis: 100%;
}

.flex-basis-40 {
    flex-basis: 40%;
}

.flex-basis-30 {
    flex-basis: 30%;
}

.flex-basis-20 {
    flex-basis: 20%;
}

table.simple {
    tbody tr:not(:last-child) th {
        border-bottom: vars.$border-width solid c.$grey-border;
    }
}

[data-statistics] .table.simple th {
    font-weight: vars.$font-weight-normal;
    padding-left: 0;
}

.session-close-checkboxes {
    display: flex;
    width: 9rem;
    justify-content: flex-end;
    padding-top: vars.$space-xs;
    margin-left: auto;

    &>* {
        flex-basis: 3rem;
        display: flex;
        justify-content: center;
    }
}

.session-close-box {
    width: 3rem;
}

#session-close-table .custom-data {
    display: flex;
    flex-direction: column;
    align-self: flex-start;

    &>* {
        flex-direction: row;
        flex-basis: 100%;
    }

    &>*+* {
        margin-top: vars.$space-xs;
    }

    [data-label]:before {
        content: attr(data-label);
        width: 50%;
        font-weight: 600;
    }
}

@include breakpoints.econ-mobile {

    .session-close-header .custom-data>* {
        display: none;
    }

    #session-close-table .striped {
        &>* {
            flex-direction: column;

            &>*+* {
                margin-top: vars.$space-sm;
            }
        }

        &>*>* {
            width: 100%;
        }
    }
}

// Modal
.assignment-reminder-modals .modal-body {
    width: 500px;
    max-width: 100%;
}

// Live Search
.data-list.relative {
    display: none;
    position: relative;

    &.active {
        display: flex;
    }
}

.data-list>.data-item.bg-red-lighter {

    &,
    &:hover {
        background-color: c.$red-lighter;
    }
}

.cursor-default {
    cursor: default;
}

// Button dropdown
.button-list.left .dropdown {
    right: auto;
    left: 0;
    transform: translateX(-100%);
}

// Sortable
[data-sortable-item]>*:not(:first-child) {
    flex-grow: 1;
}

// Navigation
.main-nav .dropdown {
    z-index: 12;
}

.mobile-nav {
    height: calc(100dvh - #{vars.$header-height-mobile + 1px});
}

.mobile-nav-inner h2 {
    margin-bottom: vars.$space-lg;
}

.app-header {
    z-index: 10;
}

body.nav-open {
    padding-top: vars.$header-height;

    @include breakpoints.econ-mobile {
        padding-top: vars.$header-height-mobile;
    }

    .app-header {
        top: 0;
        position: fixed;
    }
}


.note+* {
    margin-top: vars.$space-base;
}

.collapsible.note .collapsible-title {
    gap: vars.$space-base;
}

.note.active .collapsible-header i[class*="icon-help"] {
    transform: rotate(0);
}

.has-icon.flex-gap-xs {
    gap: vars.$space-xs;
}

@include breakpoints.econ-mobile {
    .table.break-mobile {
        .button-list {
            margin: 0;

            .btn,
            button {
                padding: 0;
            }
        }

        .has-dropdown {
            cursor: auto;

            &>.btn {
                display: none;
            }
        }

        .dropdown {
            position: relative;
            background: none;
            padding: 0;
            box-shadow: none;
            display: flex;
            left: 0;
            transform: translate(0);

            li {
                padding: 0;
            }

            li+li {
                margin-top: vars.$space-sm;
            }
        }
    }
}

// Display EMail Template rich text
.force-normalize-fonts {

    h1,
    h2,
    h3,
    h4,
    h5 {
        font-size: vars.$body-font-size;
    }
}

// WORKAROUND: Could be added to the framework
// Width base classes
$i: 1;
$n: 12;

@while $i < ($n + 1) {
    .w-#{$i} {
        width: math.percentage(calc(1 / $n) * $i);
    }

    $i: $i + 1;
}

@include breakpoints.econ-until(breakpoints.$tablet-breakpoint) {
    [class*='grid-col-'] [class*='span-'] {
        grid-column: span 1;
    }
}

[class*='grid-col-'].stretch-only-child>*:only-child {
    grid-column: 1 / -1;
}

.break-grid {
    grid-column: 1;
}

.announcement {
    .close {
        float: right;
        margin-left: vars.$space-sm;
    }

    @include breakpoints.econ-mobile {
        display: flex;
        flex-direction: column-reverse;

        .close {
            margin-left: 0;
            margin-top: vars.$space-sm;
            float: none;
        }
    }
}

.notification.error a,
.notification.success a {
    color: c.$white;
}

input[type="checkbox"][readonly] {
    filter: grayscale(1);
    opacity: 0.8;
}


// Changelog
.changes-cell {
    div {
        display: flex;
    }

    div:last-child {
        flex-grow: 1;
    }

    .changelog-separator {
        padding-left: vars.$space-xs;
        padding-right: vars.$space-xs;
    }

    .changelog-key {
        text-transform: capitalize;
    }
}

.change-row {
    @include breakpoints.econ-mobile {
        flex-direction: column;
        padding-bottom: vars.$space-xs;
        margin-bottom: vars.$space-xs;
        border-bottom: 1px solid c.$grey-border;

        .change-row,
        .changelog-changes {
            flex-direction: column;
        }
    }
}

// Statistics

.stretch-table-cells .table tr {

    td,
    th {
        padding-left: 0;
        padding-right: 0;
    }
}

// Grid
@supports (display: grid) {
    [class*="grid-"] {
        &.grid-row-gap-sm {
            row-gap: vars.$space-sm;
        }

        &.grid-row-gap-md {
            row-gap: vars.$space-md;
        }

        &.grid-row-gap-lg {
            row-gap: vars.$space-lg;
        }

        &.grid-row-gap-xl {
            row-gap: vars.$space-xl;
        }
    }
}

.truncate-6 {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 6;
    line-clamp: 6;
    -webkit-box-orient: vertical;
}
